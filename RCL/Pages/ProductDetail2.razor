@page "/product/{productId:int}"
@inject HttpClient Http
@using System.Net.Http.Json
@using RCL.Data.DTO

<link href="_content/RCL/product-detail.css" rel="stylesheet" />

<div class="product-container">
    @if (product == null)
    {
        <p class="loading-message">Loading product...</p>
    }
    else
    {
        <div class="product-card">
            <div class="product-card-header">
                <h3>@product.Name</h3>
            </div>
            <div class="product-card-body">
                <img src="https://via.placeholder.com/300" alt="@product.Name" class="product-image" />
                <p class="product-description">@product.Description</p>
                <p class="product-price"><strong>Price:</strong> @product.Price.ToString("C")</p>
                <p class="product-stock"><strong>Stock:</strong> @product.Stock</p>
            </div>
        </div>
    }
</div>

@code {
    private ProductDTO product;

    [Parameter]
    public int productId { get; set; }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            product = await Http.GetFromJsonAsync<ProductDTO>($"api/Products/{productId}");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Error fetching product details: {ex.Message}");
            // Consider adding error handling logic here, e.g., display an error message to the user
        }
    }
}


