@page "/categories/delete/{CategoryId:int}"
@using Microsoft.AspNetCore.Authorization
@using StoreManager.Data
@using StoreManager.Data.Models
@inject ApplicationDbContext DbContext
@inject NavigationManager NavManager
@rendermode InteractiveServer

@attribute [Authorize(Roles = "Administrator, Employee")]

<h3 class="mb-4 text-danger">Delete Category</h3>

<p>Are you sure you want to delete the category <strong>"@Category?.Name"</strong>?</p>

<div class="mt-4">
    <button class="btn btn-danger me-2" @onclick="HandleDelete">Yes, Delete</button>
    <button class="btn btn-secondary" @onclick="Cancel">Cancel</button>
</div>

@code {
    [Parameter] public int CategoryId { get; set; }
    private Category? Category;

    // Metoda wywoływana podczas inicjalizacji komponentu
    protected override async Task OnInitializedAsync()
    {
        // Pobieranie kategorii z bazy danych na podstawie CategoryId
        Category = await DbContext.Categories.FindAsync(CategoryId);

        // Jeśli kategoria nie istnieje, nawiguj do listy kategorii
        if (Category == null)
        {
            NavManager.NavigateTo("/categories");
        }
    }

    // Metoda obsługująca usunięcie kategorii
    private async Task HandleDelete()
    {
        if (Category != null)
        {
            // Usunięcie kategorii z bazy danych
            DbContext.Categories.Remove(Category);
            await DbContext.SaveChangesAsync();
        }
        // Nawigacja do strony z listą kategorii
        NavManager.NavigateTo("/categories");
    }

    // Metoda anulująca usunięcie kategorii
    private void Cancel()
    {
        // Nawigacja do strony z listą kategorii
        NavManager.NavigateTo("/categories");
    }
}


